<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

	<context:component-scan base-package="com.qaprosoft.zafira.services" />

	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"/>

	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="bean:name=googleService" value-ref="googleService"/>
				<entry key="bean:name=ldapService" value-ref="ldapService"/>
				<entry key="bean:name=jiraService" value-ref="jiraService"/>
				<entry key="bean:name=jenkinsService" value-ref="jenkinsService"/>
				<entry key="bean:name=slackService" value-ref="slackService"/>
				<entry key="bean:name=amazonService" value-ref="amazonService"/>
				<entry key="bean:name=hipchatService" value-ref="hipchatService"/>
				<entry key="bean:name=cryptoService" value-ref="cryptoService"/>
				<entry key="bean:name=rabbitMQService" value-ref="rabbitMQService"/>
			</map>
		</property>
		<property name="assembler" ref="assembler"/>
		<property name="namingStrategy" ref="namingStrategy"/>
		<property name="autodetect" value="true"/>
		<property name="server" ref="mbeanServer"/>
	</bean>

	<bean id="jmxAttributeSource"
		  class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>

	<!-- will create management interface using annotation metadata -->
	<bean id="assembler"
		  class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
		<property name="attributeSource" ref="jmxAttributeSource"/>
	</bean>

	<!-- will pick up the ObjectName from the annotation -->
	<bean id="namingStrategy"
		  class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
		<property name="attributeSource" ref="jmxAttributeSource"/>
	</bean>

	<bean id="googleService" class="com.qaprosoft.zafira.services.services.jmx.google.GoogleService"/>

	<bean id="ldapService" class="com.qaprosoft.zafira.services.services.jmx.ldap.LDAPService"/>

	<bean id="jiraService" class="com.qaprosoft.zafira.services.services.jmx.JiraService"/>

	<bean id="jenkinsService" class="com.qaprosoft.zafira.services.services.jmx.JenkinsService"/>

	<bean id="slackService" class="com.qaprosoft.zafira.services.services.jmx.SlackService"/>

	<bean id="amazonService" class="com.qaprosoft.zafira.services.services.jmx.AmazonService"/>

	<bean id="hipchatService" class="com.qaprosoft.zafira.services.services.jmx.HipchatService"/>

	<bean id="cryptoService" class="com.qaprosoft.zafira.services.services.jmx.CryptoService">
		<property name="salt" value="${zafira.crypto_salt}" />
	</bean>
	
	<bean id="rabbitMQService" class="com.qaprosoft.zafira.services.services.jmx.RabbitMQService"/>

	<bean id="passwordEncryptor" class="org.jasypt.util.password.BasicPasswordEncryptor" />

	<bean id="tokenizer" class="com.qaprosoft.zafira.services.util.Tokenizer">
		<constructor-arg index="0" value="SHA1PRNG" />
		<constructor-arg index="1" value="SHA-1" />
	</bean>

	<bean id="messageJsonifier" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="serializationInclusion" value="NON_NULL" />
	</bean>

	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="messageJsonifier" />
		<property name="targetMethod" value="configure" />
		<property name="arguments">
			<list>
				<value type="com.fasterxml.jackson.databind.SerializationFeature">FAIL_ON_EMPTY_BEANS</value>
				<value>false</value>
			</list>
		</property>
	</bean>

	<bean id="serviceMessageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:i18n/services/messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
       	      	<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<bean id="asynSendEmailTask" class="com.qaprosoft.zafira.services.services.emails.AsynSendEmailTask" scope="prototype"/>

	<bean class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean"
		id="freemarkerConfiguration">
		<property name="preferFileSystemAccess" value="true" />
		<property name="templateLoaderPaths" value="classpath:templates" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<cache:annotation-driven />

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="projects"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="users"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="testCases"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="environments"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="testRunStatistics"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="groups"/>
            </set>
        </property>
    </bean>

	<bean id="amazonConfig" class="com.amazonaws.ClientConfiguration">
		<property name="maxConnections" value="100" />
		<property name="protocol" value="HTTP" />
	</bean>

	<bean id="jwtService" class="com.qaprosoft.zafira.services.services.auth.JWTService">
		<constructor-arg index="0" value="${zafira.jwt.secret}" />
		<constructor-arg index="1" value="${zafira.jwt.authTokenExp}"  />
		<constructor-arg index="2" value="${zafira.jwt.refreshTokenExp}"  />
	</bean>

</beans>
