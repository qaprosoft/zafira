<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qaprosoft.zafira.dbaccess.dao.mysql.application.UserMapper">

	<insert id="createUser" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			INSERT INTO USERS (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME, EMAIL, COVER_PHOTO_URL)
			VALUES (
				#{username},
				#{password},
			    #{firstName},
				#{lastName},
				#{email},
				#{photoURL}
			)
		]]>
	</insert>

	<sql id="getUser">
		<![CDATA[
			SELECT
				U.ID AS USER_ID,
				U.USERNAME AS USER_USERNAME,
				U.PASSWORD AS USER_PASSWORD,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.LAST_NAME AS USER_LAST_NAME,
				U.EMAIL AS USER_EMAIL,
				G.ID AS GROUP_ID,
				G.NAME AS GROUP_NAME,
				G.ROLE AS GROUP_ROLE,
				G.MODIFIED_AT AS GROUP_MODIFIED_AT,
				G.CREATED_AT AS GROUP_CREATED_AT,
				P.ID AS PERMISSION_ID,
				P.NAME AS PERMISSION_NAME,
				U.LAST_LOGIN AS USER_LAST_LOGIN,
				U.COVER_PHOTO_URL AS USER_COVER_PHOTO_URL,
				U.MODIFIED_AT AS USER_MODIFIED_AT,
				U.CREATED_AT AS USER_CREATED_AT,
				UP.ID AS USER_PREFERENCE_ID,
				UP.NAME AS USER_PREFERENCE_NAME,
				UP.VALUE AS USER_PREFERENCE_VALUE,
				UP.MODIFIED_AT AS USER_PREFERENCE_MODIFIED_AT,
				UP.CREATED_AT AS USER_PREFERENCE_CREATED_AT
			FROM
				USERS U
			LEFT JOIN
				USER_GROUPS UG
			ON
				U.ID = UG.USER_ID
			LEFT JOIN
				GROUPS G
			ON
				UG.GROUP_ID = G.ID
			LEFT JOIN
				USER_PREFERENCES UP
			ON
				UP.USER_ID = U.ID
			LEFT JOIN
				GROUP_PERMISSIONS GP
			ON
				GP.group_id = G.ID
			LEFT JOIN
				PERMISSIONS P
			ON
				GP.PERMISSION_ID = P.ID
		]]>
	</sql>

	<select id="getUserById" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			WHERE U.ID = #{id};
		]]>
	</select>

	<select id="getUserByUserName" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			WHERE U.USERNAME = #{username};
		]]>
	</select>
	
	<select id="searchUsers" resultMap="UserResultMap">
		<![CDATA[
			SELECT
				U.ID AS USER_ID,
				U.USERNAME AS USER_USERNAME,
				U.PASSWORD AS USER_PASSWORD,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.LAST_NAME AS USER_LAST_NAME,
				U.EMAIL AS USER_EMAIL,
				U.COVER_PHOTO_URL AS USER_COVER_PHOTO_URL,
				U.LAST_LOGIN AS USER_LAST_LOGIN,
				U.MODIFIED_AT AS USER_MODIFIED_AT,
				U.CREATED_AT AS USER_CREATED_AT
			FROM
				USERS U
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="null != id">
	            <![CDATA[
	               AND U.ID = #{id}
	            ]]>
			</if>
			<if test="null != username">
	            <![CDATA[
	               AND LOWER(U.USERNAME) LIKE LOWER(CONCAT(#{username}, '%')) 
	            ]]>
			</if>
			<if test="null != email">
	            <![CDATA[
	               AND LOWER(U.EMAIL) LIKE LOWER(CONCAT(#{email}, '%')) 
	            ]]>
			</if>
			<if test="null != firstLastName">
	            <![CDATA[
	               AND LOWER(CONCAT(U.FIRST_NAME, ' ', U.LAST_NAME)) LIKE LOWER(CONCAT('%', #{firstLastName}, '%')) 
	            ]]>
			</if>
			<if test="null != date">
	            <![CDATA[
	               AND U.CREATED_AT::date = #{date}::date
	            ]]>
			</if>
			<if test="null != fromDate">
				<![CDATA[
	               AND U.CREATED_AT::date >= #{fromDate}::date
	            ]]>
			</if>
			<if test="null != toDate">
				<![CDATA[
	               AND U.CREATED_AT::date <= #{toDate}::date
	            ]]>
			</if>
		</trim>
		<![CDATA[
			ORDER BY CASE WHEN U.PASSWORD IS NULL OR U.PASSWORD = '' THEN 0 ELSE 1 END DESC, U.USERNAME
			LIMIT #{pageSize} OFFSET #{offset}
		]]>
	</select>
	
	<select id="getUserSearchCount" resultType="java.lang.Integer">
		<![CDATA[
		SELECT 
			COUNT(*) 
		FROM 
			USERS U
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="null != id">
	            <![CDATA[
	               AND U.ID = #{id}
	            ]]>
			</if>
			<if test="null != username">
	            <![CDATA[
	               AND LOWER(U.USERNAME) LIKE LOWER(CONCAT(#{username}, '%')) 
	            ]]>
			</if>
			<if test="null != firstLastName">
	            <![CDATA[
	               AND LOWER(CONCAT(U.FIRST_NAME, ' ', U.LAST_NAME)) LIKE LOWER(CONCAT('%', #{firstLastName}, '%')) 
	            ]]>
			</if>
			<if test="null != email">
	            <![CDATA[
	               AND LOWER(U.EMAIL) LIKE LOWER(CONCAT(#{email}, '%')) 
	            ]]>
			</if>
			<if test="null != date">
	            <![CDATA[
	               AND U.CREATED_AT::date = #{date}::date
	            ]]>
			</if>
			<if test="null != fromDate">
				<![CDATA[
	               AND U.CREATED_AT::date >= #{fromDate}::date
	            ]]>
			</if>
			<if test="null != toDate">
				<![CDATA[
	               AND U.CREATED_AT::date <= #{toDate}::date
	            ]]>
			</if>
			<if test="null != groupName">
				<![CDATA[
	               AND LOWER(G.NAME) LIKE LOWER(CONCAT(#{groupName}, '%'))
	            ]]>
			</if>
		</trim>
	</select>

	<update id="updateUser">
		<![CDATA[
			UPDATE
			    USERS
		]]>
			<set>
				<if test="null != firstName">
		            <![CDATA[
		               FIRST_NAME = #{firstName},
		            ]]>
				</if>
				<if test="null != lastName">
		            <![CDATA[
		               LAST_NAME = #{lastName},
		            ]]>
				</if>
				<if test="null != email">
		            <![CDATA[
		               EMAIL = #{email},
		            ]]>
				</if>
				<if test="null != photoURL">
					<![CDATA[
		               COVER_PHOTO_URL = #{photoURL},
		            ]]>
				</if>
				<if test="null != username">
		            <![CDATA[
		               USERNAME = #{username},	
		            ]]>
				</if>
				<if test="null != password">
		            <![CDATA[
		               PASSWORD = #{password},	
		            ]]>
				</if>
				<if test="null != lastLogin">
		            <![CDATA[
		               LAST_LOGIN = #{lastLogin}	
		            ]]>
				</if>
			</set>
		<![CDATA[
			WHERE
			    ID = #{id}
		]]>
	</update>
	
	<update id="updateLastLoginDate">
		<![CDATA[
			UPDATE
			    USERS
			SET
				LAST_LOGIN = CURRENT_TIMESTAMP
			WHERE
			    ID = #{id}
		]]>
	</update>

	<sql id="deleteUser">
		<![CDATA[
			DELETE FROM USERS
			WHERE ID = #{id}
		]]>
	</sql>

	<delete id="deleteUser">
		<include refid="deleteUser" />
	</delete>

	<delete id="deleteUserById">
		<include refid="deleteUser" />
	</delete>

	<resultMap type="com.qaprosoft.zafira.models.db.User" id="UserResultMap" autoMapping="false">
		<id column="USER_ID" property="id" />
		<result column="USER_USERNAME" property="username" />
		<result column="USER_PASSWORD" property="password" />
		<result column="USER_FIRST_NAME" property="firstName" />
		<result column="USER_LAST_NAME" property="lastName" />
		<result column="USER_EMAIL" property="email" />
		<result column="USER_COVER_PHOTO_URL" property="photoURL" />
		<result column="USER_LAST_LOGIN" property="lastLogin" />
		<result column="USER_MODIFIED_AT" property="modifiedAt" />
		<result column="USER_CREATED_AT" property="createdAt" />
		<collection property="groups" ofType="com.qaprosoft.zafira.models.db.Group" resultMap="com.qaprosoft.zafira.dbaccess.dao.mysql.application.GroupMapper.GroupResultMap"/>
		<collection property="preferences" ofType="com.qaprosoft.zafira.models.db.UserPreference" resultMap="com.qaprosoft.zafira.dbaccess.dao.mysql.application.UserPreferenceMapper.UserPreferenceResultMap"/>
	</resultMap>

	<insert id="addUserToGroup">
		<![CDATA[
			INSERT INTO USER_GROUPS (USER_ID, GROUP_ID)
			VALUES (
				#{userId},
				#{groupId}
			)
		]]>
	</insert>

	<delete id="deleteUserFromGroup">
		DELETE
		FROM
			USER_GROUPS
		WHERE
			ID = (SELECT ID FROM USER_GROUPS WHERE USER_ID = #{userId} AND GROUP_ID = #{groupId})
	</delete>

</mapper>
